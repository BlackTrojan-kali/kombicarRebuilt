import React, { useState, useEffect } from 'react';
import useDrivingLicence from '../../hooks/useDrivingLicence';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faIdCard, faFileAlt, faUpload, faSave, faSpinner, faCheckCircle, faExclamationTriangle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';
import dayjs from 'dayjs';
import { toast } from "sonner";

import useColorScheme from '../../hooks/useColorScheme';
import useAuth from '../../hooks/useAuth';
import { useNavigate } from 'react-router-dom';

const MyDrivingLicence = () => {
Â  const { theme } = useColorScheme();
Â  const {user} = useAuth();
Â 
Â  const { 
Â  Â  licenceInfo, 
Â  Â  loading, 
Â  Â  error, 
Â  Â  getLicenceDetails, 
Â  Â  updateLicenceInfo, 
Â  Â  uploadLicenceDocument 
Â  } = useDrivingLicence();

Â  const [licenceData, setLicenceData] = useState({
Â  Â  licenseNumber: '',
Â  Â  dateOfBirth: '',
Â  Â  issueDate: '',
Â  Â  expirationDate: '',
Â  Â  category: 0 
Â  });
Â  const [file, setFile] = useState(null);

Â  const documentTypeMap = {
Â  Â  0: "Carte Grise",
Â  Â  1: "Attestation d'Assurance",
Â  Â  2: "Permis de conduire",
Â  Â  3: "Photo",
Â  Â  4: "Photo d'immatriculation",
Â  };
Â  const licenceCategoryMap = {
Â  Â  0: "A",
Â  Â  1: "B",
Â  Â  2: "C",
Â  Â  3: "D",
Â  };

Â  useEffect(() => {
Â  Â  getLicenceDetails();
Â  }, []);

Â  useEffect(() => {
Â  Â  if (licenceInfo) {
Â  Â  Â  setLicenceData({
Â  Â  Â  Â  licenseNumber: licenceInfo.licenseNumber || '',
Â  Â  Â  Â  dateOfBirth: licenceInfo.dateOfBirth ? dayjs(licenceInfo.dateOfBirth).format('YYYY-MM-DD') : '',
Â  Â  Â  Â  issueDate: licenceInfo.issueDate ? dayjs(licenceInfo.issueDate).format('YYYY-MM-DD') : '',
Â  Â  Â  Â  expirationDate: licenceInfo.expirationDate ? dayjs(licenceInfo.expirationDate).format('YYYY-MM-DD') : '',
Â  Â  Â  Â  category: licenceInfo.category || 0
Â  Â  Â  });
Â  Â  }
Â  }, [licenceInfo]);

Â  const handleInputChange = (e) => {
Â  Â  const { name, value } = e.target;
Â  Â  setLicenceData(prevData => ({ 
Â  Â  Â  ...prevData, 
Â  Â  Â  // Convertir la catÃ©gorie en nombre uniquement si le nom est 'category'
Â  Â  Â  [name]: name === 'category' ? parseInt(value, 10) : value 
Â  Â  }));
Â  };

Â  const handleFileChange = (e) => {
Â  Â  setFile(e.target.files[0]);
Â  };

Â  const handleUpdateInfoSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  
Â  Â  // ðŸ›‘ Logique de formatage pour respecter l'ISO 8601 complet
Â  Â  const formattedData = {
Â  Â  Â  ...licenceData,
Â  Â  Â  // Utiliser .toISOString() uniquement si la date n'est pas vide
Â  Â  Â  dateOfBirth: licenceData.dateOfBirth ? dayjs(licenceData.dateOfBirth).toISOString() : null,
Â  Â  Â  issueDate: licenceData.issueDate ? dayjs(licenceData.issueDate).toISOString() : null,
Â  Â  Â  expirationDate: licenceData.expirationDate ? dayjs(licenceData.expirationDate).toISOString() : null
Â  Â  };
Â  Â  // S'assurer que les champs requis (comme licenseNumber et dates) ne sont pas null/vides
Â  Â  // Vous pouvez ajouter une validation front-end ici si nÃ©cessaire

Â  Â  try {
Â  Â  Â  // Le toast de succÃ¨s est gÃ©rÃ© dans le hook useDrivingLicence, 
Â  Â  Â  // donc nous laissons la gestion des erreurs ici pour Ã©viter la duplication.
Â  Â  Â  await updateLicenceInfo(formattedData);
Â  Â  Â  // toast.success est retirÃ© ici car il est dÃ©jÃ  dans le hook.
Â  Â  } catch (err) {
Â  Â  Â  // Le toast d'erreur est gÃ©rÃ© dans le hook useDrivingLicence.
Â  Â  Â  // Vous pouvez logguer l'erreur locale si besoin.
Â  Â  }
Â  };

Â  const handleUploadDocumentSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  if (!file) {
Â  Â  Â  toast.error('Veuillez sÃ©lectionner un fichier Ã  uploader.');
Â  Â  Â  return;
Â  Â  }

Â  Â  const formData = new FormData();
Â  Â  formData.append('licenceFile', file);
Â  Â  // La ligne suivante est commentÃ©e dans votre code, elle pourrait Ãªtre nÃ©cessaire
Â  Â  // si l'API exige le type de document dans le FormData et non dans l'URL.
Â  Â  // formData.append('type', 2); 

Â  Â  try {
Â  Â  Â  await uploadLicenceDocument(formData);
Â  Â  Â  // toast.success est retirÃ© ici car il est dÃ©jÃ  dans le hook.
Â  Â  } catch (err) {
Â  Â  Â  // Le toast d'erreur est gÃ©rÃ© dans le hook useDrivingLicence.
Â  Â  }
Â  };

Â  const pageBgColor = theme === 'dark' ? 'bg-gray-900' : '';
Â  const textColor = theme === 'dark' ? 'text-gray-100' : 'text-gray-900';
Â  const cardBg = theme === 'dark' ? 'bg-gray-800' : 'bg-white';
Â  const inputBg = theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100';
Â  const borderColor = theme === 'dark' ? 'border-gray-700' : 'border-gray-200';

Â  if (loading && !licenceInfo) {
Â  Â  return (
Â  Â  Â  <div className={`flex items-center justify-center min-h-screen ${pageBgColor} ${textColor}`}>
Â  Â  Â  Â  <FontAwesomeIcon icon={faSpinner} spin size="2x" className="mr-2" />
Â  Â  Â  Â  <p className="text-xl">Chargement des informations du permis...</p>
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <div className={`${pageBgColor} ${textColor} min-h-screen py-10 transition-colors duration-300`}>
Â  Â  Â  <main className='max-w-4xl mx-auto px-4 sm:px-6 lg:px-8'>
Â  Â  Â  Â  <div className='text-center mb-8'>
Â  Â  Â  Â  Â  <h1 className='text-3xl sm:text-4xl font-extrabold'>
Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faIdCard} className='mr-3 text-blue-500' />
Â  Â  Â  Â  Â  Â  Mon Permis de Conduire
Â  Â  Â  Â  Â  </h1>
Â  Â  Â  Â  Â  <p className={`${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'} mt-2`}>
Â  Â  Â  Â  Â  Â  GÃ©rez et mettez Ã  jour les informations et le document de votre permis.
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {licenceInfo && (
Â  Â  Â  Â  Â  <div className={`${cardBg} rounded-xl shadow-md p-6 mb-6 text-center border ${borderColor}`}>
Â  Â  Â  Â  Â  Â  <h2 className='text-xl font-bold mb-2'>Statut de vÃ©rification</h2>
Â  Â  Â  Â  Â  Â  {licenceInfo.verificationState === 1 && (
Â  Â  Â  Â  Â  Â  Â  <span className="inline-flex items-center rounded-full bg-yellow-100 px-3 py-1 text-sm font-medium text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100">
Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faExclamationTriangle} className='mr-2' /> En attente de vÃ©rification
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  {licenceInfo.verificationState === 2 && (
Â  Â  Â  Â  Â  Â  Â  <span className="inline-flex items-center rounded-full bg-green-100 px-3 py-1 text-sm font-medium text-green-800 dark:bg-green-800 dark:text-green-100">
Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faCheckCircle} className='mr-2' /> VÃ©rifiÃ©
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  {licenceInfo.verificationState === 3 && (
Â  Â  Â  Â  Â  Â  Â  <span className="inline-flex items-center rounded-full bg-red-100 px-3 py-1 text-sm font-medium text-red-800 dark:bg-red-800 dark:text-red-100">
Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faTimesCircle} className='mr-2' /> RejetÃ©
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  {licenceInfo.rejectionReason && (
Â  Â  Â  Â  Â  Â  Â  <p className={`text-sm mt-2 italic ${theme === 'dark' ? 'text-red-400' : 'text-red-600'}`}>Raison du rejet: {licenceInfo.rejectionReason}</p>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  {licenceInfo.documentUrl && (
Â  Â  Â  Â  Â  Â  Â  <div className='mt-4'>
Â  Â  Â  Â  Â  Â  Â  Â  <p className='font-semibold'>Document actuel :</p>
Â  Â  Â  Â  Â  Â  Â  Â  <img src={licenceInfo.documentUrl} alt="Permis de conduire" className="mt-2 max-h-64 mx-auto rounded-lg shadow-lg border border-gray-300 dark:border-gray-600" />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}

Â  Â  Â  Â  {/* Formulaire de mise Ã  jour des infos */}
Â  Â  Â  Â  <div className={`${cardBg} rounded-xl shadow-xl p-8 mb-8 border ${borderColor}`}>
Â  Â  Â  Â  Â  <h2 className={`text-2xl font-bold mb-4 pb-3 border-b ${borderColor}`}>
Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faSave} className='mr-2 text-blue-500' />
Â  Â  Â  Â  Â  Â  Mettre Ã  jour les informations
Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  <form onSubmit={handleUpdateInfoSubmit} className='space-y-4'>
Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  <label htmlFor="licenseNumber" className="block text-sm font-medium">NumÃ©ro de permis</label>
Â  Â  Â  Â  Â  Â  Â  <input 
Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  id="licenseNumber"
Â  Â  Â  Â  Â  Â  Â  Â  name="licenseNumber"
Â  Â  Â  Â  Â  Â  Â  Â  value={licenceData.licenseNumber}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm p-2 ${inputBg} ${textColor}`}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div className='grid grid-cols-1 sm:grid-cols-2 gap-4'>
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="dateOfBirth" className="block text-sm font-medium">Date de naissance</label>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="date"
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="dateOfBirth"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="dateOfBirth"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={licenceData.dateOfBirth}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm p-2 ${inputBg} ${textColor}`}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="issueDate" className="block text-sm font-medium">Date de dÃ©livrance</label>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="date"
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="issueDate"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="issueDate"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={licenceData.issueDate}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm p-2 ${inputBg} ${textColor}`}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="expirationDate" className="block text-sm font-medium">Date d'expiration</label>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="date"
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="expirationDate"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="expirationDate"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={licenceData.expirationDate}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm p-2 ${inputBg} ${textColor}`}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="category" className="block text-sm font-medium">CatÃ©gorie</label>
Â  Â  Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="category"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="category"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={licenceData.category}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm p-2 ${inputBg} ${textColor}`}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  {Object.entries(licenceCategoryMap).map(([value, label]) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <option key={value} value={parseInt(value, 10)}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {label}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </option>
Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  className={`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {loading ? (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faSpinner} spin className='mr-2' /> Mise Ã  jour...
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faSave} className='mr-2' /> Sauvegarder les informations
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </form>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Formulaire de tÃ©lÃ©chargement de document */}
Â  Â  Â  Â  <div className={`${cardBg} rounded-xl shadow-xl p-8 border ${borderColor}`}>
Â  Â  Â  Â  Â  <h2 className={`text-2xl font-bold mb-4 pb-3 border-b ${borderColor}`}>
Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faFileAlt} className='mr-2 text-purple-500' />
Â  Â  Â  Â  Â  Â  TÃ©lÃ©charger le document
Â  Â  Â  Â  Â  Â  {licenceInfo?.verificationState === 1 && (
Â  Â  Â  Â  Â  Â  Â  <span className={`ml-3 text-sm font-medium ${theme === 'dark' ? 'text-yellow-400' : 'text-yellow-600'}`}>
Â  Â  Â  Â  Â  Â  Â  Â  (Remplacera le document actuel)
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  <form onSubmit={handleUploadDocumentSubmit} className='space-y-4'>
Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  <label htmlFor="file" className="block text-sm font-medium">SÃ©lectionner un fichier (JPEG, PNG ou PDF)</label>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="file"
Â  Â  Â  Â  Â  Â  Â  Â  id="file"
Â  Â  Â  Â  Â  Â  Â  Â  name="licenceFile"
Â  Â  Â  Â  Â  Â  Â  Â  accept=".jpg,.jpeg,.png,.pdf"
Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleFileChange}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  className={`mt-1 block w-full text-sm ${inputBg} ${textColor}`}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  className={`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors duration-200 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {loading ? (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faSpinner} spin className='mr-2' /> TÃ©lÃ©chargement...
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesomeIcon icon={faUpload} className='mr-2' /> TÃ©lÃ©charger le document
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </form>
Â  Â  Â  Â  </div>
Â  Â  Â  </main>
Â  Â  </div>
Â  );
};

export default MyDrivingLicence;